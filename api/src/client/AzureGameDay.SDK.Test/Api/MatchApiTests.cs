/* 
 * Azure Game Day - RPSLS API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using AzureGameDay.SDK.Client;
using AzureGameDay.SDK.Api;
using AzureGameDay.SDK.Model;

namespace AzureGameDay.SDK.Test
{
    /// <summary>
    ///  Class for testing MatchApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class MatchApiTests : IDisposable
    {
        private MatchApi instance;

        public MatchApiTests()
        {
            instance = new MatchApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of MatchApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' MatchApi
            //Assert.IsType(typeof(MatchApi), instance, "instance is a MatchApi");
        }

        
        /// <summary>
        /// Test MatchGet
        /// </summary>
        [Fact]
        public void MatchGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string challengerId = null;
            //var response = instance.MatchGet(challengerId);
            //Assert.IsType<List<Match>> (response, "response is List<Match>");
        }
        
        /// <summary>
        /// Test MatchPost
        /// </summary>
        [Fact]
        public void MatchPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //MatchRequest matchRequest = null;
            //var response = instance.MatchPost(matchRequest);
            //Assert.IsType<Match> (response, "response is Match");
        }
        
    }

}
